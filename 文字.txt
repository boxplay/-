1.字面量创建对象和new创建对象有什么区别，new内部都实现了什么，手写一个new
字面量：
  字面量创建对象更简单，方便阅读
  不需要作用域解析，速度更快
new 内部执行过程：
  创建一个新的对象
  继承父类原型上的方法.
  添加父类的属性到新的对象上并初始化. 保存方法的执行结果.
  如果执行结果有返回值并且是一个对象, 返回执行的结果, 否则, 返回新创建的对象。

2.什么是作用域，什么是作用域链？
  规定变量和函数的可使用范围称作作用域
  每个函数都有一个作用域链，查找变量或者函数时，需要从局部作用域到全局作用域依次查找，这些作用域的集合称作作用域链。

3.什么是执行栈，什么是执行上下文？
  执行上下文分为：
    全局执行上下文
    创建一个全局的window对象，并规定this指向window，执行js的时候就压入栈底，关闭浏览器的时候才弹出
  函数执行上下文
    每次函数调用时，都会新创建一个函数执行上下文
    执行上下文分为创建阶段和执行阶段
    创建阶段：函数环境会创建变量对象：arguments对象（并赋值）、函数声明（并赋值）、变量声明（不赋值），函数表达式声明（不赋值）；会确定this指向；会确定作用域
    执行阶段：变量赋值、函数表达式赋值，使变量对象编程活跃对象
  eval执行上下文

  执行栈：
    首先栈特点：先进后出
    当进入一个执行环境，就会创建出它的执行上下文，然后进行压栈，当程序执行完成时，它的执行上下文就会被销毁，进行弹栈。
    栈底永远是全局环境的执行上下文，栈顶永远是正在执行函数的执行上下文
    只有浏览器关闭的时候全局执行上下文才会弹出

4.什么是原型？什么是原型链？如何理解
    原型分为隐式原型和显式原型，每个对象都有一个隐式原型，它指向自己的构造函数的显式原型。每个构造方法都有一个显式原型。
    __proto__是隐式原型；prototype是显式原型
    所有实例的__proto__都指向他们构造函数的prototype
    所有的prototype都是对象，自然它的__proto__指向的是Object()的prototype
    所有的构造函数的隐式原型指向的都是Function()的显示原型
    Object的隐式原型是null

    原型链： 多个__proto__组成的集合成为原型链（概念类似于作用域链）
    instanceof 就是判断某对象是否位于某构造方法的原型链上。
    
5.宏任务和微任务都有哪些
  宏任务：script、setTimeOut、setInterval、setImmediate
  微任务:promise.then,process.nextTick、Object.observe、MutationObserver
  注意：Promise是同步任务